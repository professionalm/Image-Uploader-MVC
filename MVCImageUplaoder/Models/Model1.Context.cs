//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCImageUplaoder.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class db_imgEntities1 : DbContext
    {
        public db_imgEntities1()
            : base("name=db_imgEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbl_file> tbl_file { get; set; }
    
        public virtual ObjectResult<sp_get_all_files_Result> sp_get_all_files()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_all_files_Result>("sp_get_all_files");
        }
    
        public virtual ObjectResult<sp_get_file_details_Result> sp_get_file_details(Nullable<int> file_id)
        {
            var file_idParameter = file_id.HasValue ?
                new ObjectParameter("file_id", file_id) :
                new ObjectParameter("file_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_file_details_Result>("sp_get_file_details", file_idParameter);
        }
    
        public virtual int sp_insert_file(string file_name, string file_ext, string file_path)
        {
            var file_nameParameter = file_name != null ?
                new ObjectParameter("file_name", file_name) :
                new ObjectParameter("file_name", typeof(string));
    
            var file_extParameter = file_ext != null ?
                new ObjectParameter("file_ext", file_ext) :
                new ObjectParameter("file_ext", typeof(string));
    
            var file_pathParameter = file_path != null ?
                new ObjectParameter("file_path", file_path) :
                new ObjectParameter("file_path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_file", file_nameParameter, file_extParameter, file_pathParameter);
        }
    }
}
